;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "init.el" "/home/monk/.emacs.d/init.el" emacs-lisp-mode) (def-buffer "Inbox.org" "/home/monk/Dropbox/Notes/org/orgzly/Inbox.org" org-mode) (def-buffer "content" "~/Dropbox/Projects/web-blog-jeweljames/content/" dired-mode) (def-buffer "init.el.back" "/home/monk/.emacs.d/init.el.back" fundamental-mode) (def-buffer "blog-post-ideas.org" "/home/monk/Dropbox/Notes/org/blog-post-ideas.org" org-mode) (def-buffer "higher-studies.org" "/home/monk/Dropbox/Notes/org/higher-studies.org" org-mode) (def-buffer "2020-08-01_St._Guiseppe_The_Girl.md" "/home/monk/Dropbox/Personal/Journal/2020-08-01_St._Guiseppe_The_Girl.md" markdown-mode) (def-buffer "20200528154104-outside_view.org" "/home/monk/Dropbox/Notes/org/knowledgebase/20200528154104-outside_view.org" org-mode) (def-buffer "thoughts.org" "/home/monk/Dropbox/Notes/org/thoughts.org" org-mode) (def-buffer "templates-for-dilemmas.org" "/home/monk/Dropbox/Notes/org/templates-for-dilemmas.org" org-mode) (def-buffer "studies.org" "/home/monk/Dropbox/Notes/org/studies.org" org-mode) (def-buffer "quotes.org" "/home/monk/Dropbox/Notes/org/quotes.org" org-mode) (def-buffer "podcasting_gear.org" "/home/monk/Dropbox/Notes/org/podcasting_gear.org" org-mode) (def-buffer "observations.org" "/home/monk/Dropbox/Notes/org/observations.org" org-mode) (def-buffer "inbox.org" "/home/monk/Dropbox/Notes/org/inbox.org" org-mode) (def-buffer "archlinux.org" "/home/monk/Dropbox/Notes/org/archlinux.org" org-mode) (def-buffer "posts" "~/Dropbox/Projects/web-blog-jeweljames/content/posts/" dired-mode) (def-buffer "org-ninjutsu-beginners2.md" nil markdown-mode) (def-buffer "web-blog-jeweljames" "~/Dropbox/Projects/web-blog-jeweljames/" dired-mode) (def-buffer "Projects<Dropbox>" "~/Dropbox/Projects/" dired-mode) (def-buffer "rofi-theme" "~/Dropbox/Projects/rofi-theme/" dired-mode) (def-buffer "Plate.rasi" "/home/monk/Dropbox/Projects/rofi-theme/Plate.rasi" css-mode) (def-buffer "20200716174200-what_s_a_musical_note.org" "/home/monk/Dropbox/Notes/org/knowledgebase/20200716174200-what_s_a_musical_note.org" org-mode) (def-buffer "vocabulary.org" "/home/monk/Dropbox/Notes/org/vocabulary.org" org-mode) (def-buffer "books.org" "/home/monk/Dropbox/Notes/org/lists/books.org" org-mode) (def-buffer "anand_podcast.org" "/home/monk/Dropbox/Notes/org/anand_podcast.org" org-mode) (def-buffer "Animal_Cruelty.md" "/home/monk/Dropbox/Notes/blog_posts/Animal_Cruelty.md" markdown-mode) (def-buffer "org" "~/Dropbox/Notes/org/" dired-mode) (def-buffer "Projects<monk>" "~/Projects/" dired-mode) (def-buffer "kindle-clippings-manager" "~/Projects/kindle-clippings-manager/" dired-mode) (def-buffer "media" "~/Dropbox/Notes/org/knowledgebase/media/" dired-mode) (def-buffer ".newsrc-dribble" "/home/monk/.newsrc-dribble" fundamental-mode) (def-buffer "emacs-article.org" "/home/monk/Dropbox/Notes/org/emacs-article.org" org-mode) (def-buffer "emacs.org" "/home/monk/Dropbox/Notes/org/emacs.org" org-mode) (def-buffer "events.org" "/home/monk/Dropbox/Notes/org/events.org" org-mode) (def-buffer "latex.org" "/home/monk/Dropbox/Notes/org/latex.org" org-mode) (def-buffer "minecraft.org" "/home/monk/Dropbox/Notes/org/minecraft.org" org-mode) (def-buffer "music_theory.org" "/home/monk/Dropbox/Notes/org/music_theory.org" org-mode) (def-buffer "r4r.org" "/home/monk/Dropbox/Notes/org/r4r.org" org-mode) (def-buffer "test.org" "/home/monk/Dropbox/Notes/org/test.org" org-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 92) (min-pixel-width . 110) (min-pixel-height-ignore . 69) (min-pixel-width-ignore . 55) (min-pixel-height-safe . 23) (min-pixel-width-safe . 22)) leaf (pixel-width . 1242) (pixel-height . 759) (total-width . 112) (total-height . 33) (normal-height . 1.0) (normal-width . 1.0) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 2 t nil 0 t) (vscroll . 0) (dedicated) (point . 1244) (start . 1244)))) (def-params nil) t nil nil) (def-persp "polybar" nil (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 92) (min-pixel-width . 110) (min-pixel-height-ignore . 69) (min-pixel-width-ignore . 88) (min-pixel-height-safe . 23) (min-pixel-width-safe . 22)) leaf (pixel-width . 1226) (pixel-height . 851) (total-width . 111) (total-height . 37) (normal-height . 1.0) (normal-width . 1.0) (buffer "Org_Mode_Beginners.md" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 2 . 2) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1629) (start . 1629)))) (def-params nil) nil nil nil) (def-persp "org" nil (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 92) (min-pixel-width . 110) (min-pixel-height-ignore . 69) (min-pixel-width-ignore . 55) (min-pixel-height-safe . 23) (min-pixel-width-safe . 22)) leaf (pixel-width . 1242) (pixel-height . 759) (total-width . 112) (total-height . 33) (normal-height . 1.0) (normal-width . 1.0) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 2 t nil 0 t) (vscroll . 0) (dedicated) (point . 4108) (start . 3375)))) (def-params nil) nil nil nil) (def-persp "proj" ((def-buffer "library.py" "/home/monk/Projects/kindle-clippings-manager/library.py" python-mode) (def-buffer "2020-06-21_Getting_Back_Up.md" "/home/monk/Dropbox/Personal/Journal/2020-06-21_Getting_Back_Up.md" markdown-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 92) (min-pixel-width . 110) (min-pixel-height-ignore . 69) (min-pixel-width-ignore . 44) (min-pixel-height-safe . 23) (min-pixel-width-safe . 22)) leaf (pixel-width . 1226) (pixel-height . 828) (total-width . 111) (total-height . 36) (normal-height . 1.0) (normal-width . 1.0) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 2) (start . 1)))) (def-params nil) nil nil nil))